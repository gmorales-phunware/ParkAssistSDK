{"name":"ParkAssist SDK","tagline":"","body":"# ParkAssist SDK\r\n---\r\n\r\nParkAssistSDK is an attempt to create a generic use of ParkAssist's API. \r\n\r\n# Installation\r\n* Drag the `ParkAssist.framework` into your project. \r\n* Check \"Copy items if needed\".\r\n* Initialize with your SharedSecret and SiteSlug\r\n* Have Phun!\r\n\r\n### Dependencies: \r\n* MobileCoreServices\r\n* SystemConfiguration\r\n\r\nIn your app delegate: \r\n\r\n```\r\n#import <ParkAssist/ParkAssist.h>\r\n\r\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\r\n    // Override point for customization after application launch.\r\n    \r\n    [ParkAssist initWithSecret:@\"AppSecret\" andSiteSlug:@\"SiteSlug\"];\r\n    ...\r\n    return YES;\r\n}\r\n```\r\n\r\n---\r\n\r\n# Usage\r\n\r\n### Search for license plate\r\n```\r\n- (void)viewDidLoad {\r\n    [super viewDidLoad];\r\n    \r\n    [[ParkAssist sharedInstance] searchLicensePlate:@\"091\" withLat:12.123 andLon:-45.678 withCompletion:^(BOOL success, NSArray *results, NSError *error) {\r\n        if (success) {\r\n            // Show results\r\n        }\r\n    }];\r\n    \r\n}\r\n```\r\n\r\n### Get parking availability\r\n```\r\n- (void)viewDidLoad {\r\n    [super viewDidLoad];\r\n    \r\n    [[ParkAssist sharedInstance] getAvailableParkingInfoWithLat:12.123 andLon:-45.678 withCompletion:^(BOOL success, NSArray *results, NSError *error) {\r\n        if (success) {\r\n            //Show results\r\n        }\r\n    }];\r\n    \r\n}\r\n```\r\n\r\n---\r\n# Rate limit\r\n* 10 request per hour to the search service.\r\n* 100 requests per hour to any combination of other endpoints.  \r\n\r\n---\r\n\r\n# License Plate\r\n\r\n## Generating requests\r\n**Important:** All request **must** contain the following query parameters:\r\n\r\n* device: a Universally Unique Identifier of the mobile device making the request.\r\n* site: a string identifying the parking facility, also called a site slug.\r\n* signature: a string that signs each request, validating that the request originated from an approved app.\r\n\r\n## Query parameters\r\n**Important:** In addition to the query parameters listed above, requests to the search service must contain the following query parameters: \r\n\r\n* plate: The license plate text to query, eg \"ABC123\", \"XYZ\". The plate text **must** only be comprised of uppercase Alphanumeric characters. (do not include whitespace, punctuation).\r\n\r\n**Optional:**\r\n\r\n* lat: The latitude of the device making the request, measured by the device's GPS.\r\n* lon: The longitude of the device making the request, measured by the device's GPS.\r\n* ts: The timestamp when the request was generated. \r\n\r\n## Response\r\nThe API returns a JSON formatted response containing an array of results. \r\nThe API returns an empty array if there are no matches, or up to 3 reults in descending order of plate similarity to search criteria (best-match first).\r\n\r\nResponse example: \r\n\r\n```\r\n[\r\n\t{\r\n\t\t\"bay_group\": \"L1 - Row B\",\r\n\t\t\"bay_id\": 11021,\r\n\t\t\"map\": \"Level-1\",\r\n\t\t\"position\": {\r\n\t\t\"x\": 659,\r\n\t\t\"y\": 752\r\n\t},\r\n\t\t\"uuid\": \"45b0d494-4b8e-45d3-ae3f-334fa1afcf5f\",\r\n\t\t\"zone\": \"Level 1\"\r\n\t},\r\n\t{\r\n\t\t\"bay_group\": \"L3 - Row F\",\r\n\t\t\"bay_id\": 13017,\r\n\t\t\"map\": \"Level-3\",\r\n\t\t\"position\": {\r\n\t\t\"x\": 767,\r\n\t\t\"y\": 660\r\n\t},\r\n\t\t\"uuid\": \"755602d9-914a-432a-890a-f58c4be62bb5\",\r\n\t\t\"zone\": \"Level 3\"\r\n\t}\r\n]\r\n```\r\n\r\n**Important:** Each result containts the bay identifier and location, as well as a generatated uuid that can be used to retreive a thumbnail image of the vehicle. The position attribute describes the x and y offset of the bay on the map. The coordinates are teh pixel offsets, as a measured from the top left corner of the map. \r\n\r\n## Security\r\nWhen searching for a license plate, the actual plate text is never returned in the result. This prevents a malicious user of attacker attempting to scrape license plate data from the site by repeatedly querying the API with random license plates. \r\n\r\n---\r\n\r\n# Thumbnail service\r\nThe thumbnail service returns a low-resolution image of a search result.\r\n\r\n## Generating requests\r\n**Important:** All requests **must** contain a **uuid**.\r\n\r\n## Response\r\nAn image in JPG format with dimensions 320 x 240 pixels.\r\n\r\n## Security\r\nWhen a query to the search service is performed, the server generates a short-lived uuid token to access each the thumbnail of each result.\r\n**Important:** These tokens expire **5** minutes after creation.\r\n\r\n---\r\n\r\n# Map Service\r\nThe map service returns an image of a map at the parking facility. \r\n\r\n## Generating requests\r\n**Important:** All requests **must** contain a **map-name**.\r\n\r\n## Response \r\nAn image in PNG format. \r\n\r\n---\r\n\r\n# Zones Service\r\nThe zones service returns teh vehicle counts in each zone at the property. For most installations, each level of the garage is a zone. \r\n\r\n## Response\r\nThe API returns a JSON array containing the vehicle counts in each zone of the parking facility. \r\n\r\n```\r\n[\r\n\t{\r\n\t\t\"counts\": {\r\n\t\t\"available\": 63,\r\n\t\t\"occupied\": 240,\r\n\t\t\"out_of_service\": 0,\r\n\t\t\"reserved\": 0,\r\n\t\t\"timestamp\": \"2013-08-19T11:46:59.4640000-04:00\",\r\n\t\t\"total\": 303,\r\n\t\t\"vacant\": 63\r\n\t},\r\n\t\t\"id\": 3,\r\n\t\t\"name\": \"Level 4\"\r\n\t},\r\n\t{\r\n\t\t\"counts\": {\r\n\t\t\"available\": 48,\r\n\t\t\"occupied\": 71,\r\n\t\t\"out_of_service\": 0,\r\n\t\t\"reserved\": 7,\r\n\t\t\"timestamp\": \"2013-08-19T11:40:11.0820000-04:00\",\r\n\t\t\"total\": 121,\r\n\t\t\"vacant\": 50\r\n\t},\r\n\t\t\"id\": 4,\r\n\t\t\"name\": \"Level 1\"\r\n\t}\r\n]\r\n```\r\nFor displaying available parking spaces to site visitors, the available figure is most appropriate. Count terminology is defined as:\r\n\r\n* Total: All bays in the zone, regardless of status.\r\n* Out of Service: Bays not currently monitored due to a malfunction or sensor downtime. \r\n* Occupied: Bays with a vehicle parked. \r\n* Vacant: Bays with no vehicle parked.\r\n* Reserved: Bays with an assigned reservation; can overlap with out of service, vacant, and occupied bays.\r\n* Available: Bays with no vehicle parked and no reservation.\r\n\r\n---\r\n# Signs Service\r\nThe signs service returns information about the signs at the parking facility.\r\n\r\n## Response\r\nThe API returns a JSON array containing the sign counts for each sign in the parking facility. \r\n\r\n```\r\n[\r\n\t{\r\n\t\t\"counts\": {\r\n\t\t\"available\": 6,\r\n\t\t\"occupied\": 163,\r\n\t\t\"out_of_service\": 13,\r\n\t\t\"reserved\": 9,\r\n\t\t\"timestamp\": \"2013-08-19T11:45:06.8120000-04:00\",\r\n\t\t\"total\": 172,\r\n\t\t\"vacant\": 9\r\n\t},\r\n\t\t\"id\": 1,\r\n\t\t\"name\": \"Level 2 Sign\"\r\n\t},\r\n]\r\n```\r\n\r\n## Contributing to this project\r\nIf you have feature requests or bug reports, feel free to help out by sending [pull requests](https://github.com/gmorales-phunware/ParkAssistSDK/pulls) or by [creating new issues](https://github.com/gmorales-phunware/ParkAssistSDK/issues/new). \r\n\r\nThanks to all of [our contributors](https://github.com/gmorales-phunware/ParkAssistSDK/graphs/contributors).\r\n\r\nPlease take a moment to review the guidelines written by [Nicolas Gallagher](https://github.com/necolas/):\r\n* [Bug reports](https://github.com/necolas/issue-guidelines/blob/master/CONTRIBUTING.md#bugs)\r\n* [Feature requests](https://github.com/necolas/issue-guidelines/blob/master/CONTRIBUTING.md#features)\r\n* [Pull requests](https://github.com/necolas/issue-guidelines/blob/master/CONTRIBUTING.md#pull-requests)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}